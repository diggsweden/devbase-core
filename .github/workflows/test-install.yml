name: Test Installation
on:
  pull_request:
    paths:
      - 'setup.sh'
      - 'libs/**'
      - 'dot/**'
      - 'environments/**'
      - '.github/workflows/test-install.yml'
  workflow_dispatch:
jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    name: Test on Ubuntu ${{ matrix.version }}
    strategy:
      matrix:
        version: ['24.04']
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Cache Mise tools
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.local/share/mise/installs
            ~/.local/share/mise/downloads
          key: mise-${{ runner.os }}-${{ hashFiles('dot/.config/mise/config.toml') }}
          restore-keys: |
            mise-${{ runner.os }}-
      
      - name: Cache VS Code extensions
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.vscode/extensions
            ~/.config/Code/User
          key: vscode-ext-${{ runner.os }}-${{ hashFiles('dot/.config/devbase/versions.yaml') }}
          restore-keys: |
            vscode-ext-${{ runner.os }}-
      
      - name: Cache binary downloads
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.cache/devbase/debs
          key: binary-downloads-${{ runner.os }}-${{ hashFiles('dot/.config/devbase/versions.yaml') }}
          restore-keys: |
            binary-downloads-${{ runner.os }}-
      
      - name: Prepare binary cache directory
        run: mkdir -p ~/.cache/devbase/debs
      
      - name: Run installation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_NAME: DevBase CI
          GIT_EMAIL: ci@devbase.test
          DEVBASE_DEB_CACHE: ~/.cache/devbase/debs
        run: |
          export DEBIAN_FRONTEND=noninteractive
          export CI=true
          ./setup.sh --non-interactive
      - name: Verify installation
        run: |
          sudo -v
          ./verify/verify-install-check.sh
      - name: Upload installation summary
        if: always()
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: install-summary-${{ matrix.version }}
          path: ~/.config/devbase/install-summary.txt
          retention-days: 7
